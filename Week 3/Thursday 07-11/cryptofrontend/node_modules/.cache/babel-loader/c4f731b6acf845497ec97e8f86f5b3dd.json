{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\emilt\\\\Desktop\\\\Thursday 07-11\\\\cryptoexcercise\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\emilt\\\\Desktop\\\\Thursday 07-11\\\\cryptoexcercise\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(CryptoTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n}\n\nexport default App;\n\nfunction CryptoTable() {\n  const _useState = useState({\n    \"Loading\": \"data ..\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  var res = \"\";\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    res = await fetch(\"http://localhost:8080/ExcerciseThursday/api/crypto\");\n    res.json().then(res => setData(res));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(TableMap, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}\n\nfunction TableMap(props) {\n  var arri = [];\n\n  for (const _ref of Object.entries(props.data)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    const key = _ref2[0];\n    const value = _ref2[1];\n    const arrj = {\n      key,\n      value\n    };\n    arri.push(arrj);\n  }\n\n  return React.createElement(\"table\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Symbol\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Value\")))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Table, {\n    arr: arri,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n}\n\nfunction Table({\n  arr\n}) {\n  const tableItems = arr.map((n, i) => React.createElement(TableItem, {\n    key: i,\n    mapKey: n.key,\n    value: n.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n  return tableItems;\n}\n\nfunction TableItem(props) {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, props.mapKey), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, props.value));\n}","map":{"version":3,"sources":["C:/Users/emilt/Desktop/Thursday 07-11/cryptoexcercise/src/App.js"],"names":["React","useState","useEffect","App","CryptoTable","data","setData","res","fetchData","fetch","json","then","TableMap","props","arri","Object","entries","key","value","arrj","push","Table","arr","tableItems","map","n","i","TableItem","mapKey"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF;AAKD;;AACD,eAAeA,GAAf;;AAGA,SAASC,WAAT,GAAuB;AAAA,oBACGH,QAAQ,CAAC;AAAC,eAAW;AAAZ,GAAD,CADX;AAAA;AAAA,QACdI,IADc;AAAA,QACRC,OADQ;;AAErB,MAAIC,GAAG,GAAG,EAAV;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,SAAf,GAA2B;AACzBD,IAAAA,GAAG,GAAG,MAAME,KAAK,CAAC,oDAAD,CAAjB;AACAF,IAAAA,GAAG,CAACG,IAAJ,GAAWC,IAAX,CAAgBJ,GAAG,IAAID,OAAO,CAACC,GAAD,CAA9B;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN,CADF;AAGD;;AAGD,SAASO,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIC,IAAI,GAAG,EAAX;;AACA,qBAA2BC,MAAM,CAACC,OAAP,CAAeH,KAAK,CAACR,IAArB,CAA3B,EAAuD;AAAA;;AAAA,UAA3CY,GAA2C;AAAA,UAAtCC,KAAsC;AACrD,UAAMC,IAAI,GAAG;AAACF,MAAAA,GAAD;AAAKC,MAAAA;AAAL,KAAb;AACAJ,IAAAA,IAAI,CAACM,IAAL,CAAUD,IAAV;AACD;;AAED,SACE;AAAO,IAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ,CAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEL,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF;AAaD;;AAGD,SAASO,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAwB;AACtB,QAAMC,UAAU,GAAGD,GAAG,CAACE,GAAJ,CAAQ,CAACC,CAAD,EAAGC,CAAH,KAAS,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAhB;AAAmB,IAAA,MAAM,EAAED,CAAC,CAACR,GAA7B;AAAkC,IAAA,KAAK,EAAEQ,CAAC,CAACP,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,CAAnB;AACA,SAAOK,UAAP;AACD;;AAGD,SAASI,SAAT,CAAmBd,KAAnB,EAA0B;AACxB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACe,MAAX,CAAJ,EAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,KAAK,CAACK,KAAX,CAA3B,CAAP;AACD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {<CryptoTable />}\n    </div>\n  );\n}\nexport default App;\n\n\nfunction CryptoTable() {\n  const [data, setData] = useState({\"Loading\": \"data ..\"});\n  var res = \"\";\n  useEffect(() => {\n    fetchData()\n  }, []);\n\n  async function fetchData() {\n    res = await fetch(\"http://localhost:8080/ExcerciseThursday/api/crypto\");\n    res.json().then(res => setData(res));\n  }\n\n  return (\n    <div>{<TableMap data={data} />}</div>\n  )\n}\n\n\nfunction TableMap(props) {\n  var arri = [];\n  for (const [key, value] of Object.entries(props.data)) {\n    const arrj = {key,value};\n    arri.push(arrj);\n  }\n\n  return (\n    <table align=\"center\">\n      <thead>\n        <tr>\n          <th><h1>Symbol</h1></th>\n          <th><h1>Value</h1></th>\n        </tr>\n      </thead>\n      <tbody>\n        <Table arr={arri}/>\n      </tbody>\n    </table>\n  )\n}\n\n\nfunction Table({ arr }) {\n  const tableItems = arr.map((n,i) => <TableItem key={i} mapKey={n.key} value={n.value} />);\n  return tableItems;\n}\n\n\nfunction TableItem(props) {\n  return <tr><th>{props.mapKey}</th><th>{props.value}</th></tr>\n}\n"]},"metadata":{},"sourceType":"module"}