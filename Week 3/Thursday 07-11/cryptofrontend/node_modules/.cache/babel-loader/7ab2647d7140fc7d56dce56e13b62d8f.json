{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emilt\\\\Desktop\\\\Thursday 07-11\\\\cryptoexcercise\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(CryptoTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n}\n\nfunction CryptoTable() {\n  const URL = \"http://localhost:8080/ExcerciseThursday/api/crypto\";\n\n  const fetchData = () => {\n    const options = makeOptions(\"GET\", true); //True add's the token\n\n    return fetch(URL, options).then(handleHttpErrors);\n  };\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        'Accept': 'application/json'\n      }\n    };\n\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n\n    return opts;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, fetchData);\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/emilt/Desktop/Thursday 07-11/cryptoexcercise/src/App.js"],"names":["React","App","CryptoTable","URL","fetchData","options","makeOptions","fetch","then","handleHttpErrors","method","addToken","body","opts","headers","loggedIn","getToken","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF;AAKD;;AAED,SAASC,WAAT,GAAuB;AAErB,QAAMC,GAAG,GAAG,oDAAZ;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAMC,OAAO,GAAGC,WAAW,CAAC,KAAD,EAAQ,IAAR,CAA3B,CADsB,CACoB;;AAC1C,WAAOC,KAAK,CAACJ,GAAD,EAAME,OAAN,CAAL,CAAoBG,IAApB,CAAyBC,gBAAzB,CAAP;AACD,GAHD;;AAKA,QAAMH,WAAW,GAAG,CAACI,MAAD,EAASC,QAAT,EAAmBC,IAAnB,KAA4B;AAC9C,QAAIC,IAAI,GAAG;AACTH,MAAAA,MAAM,EAAEA,MADC;AAETI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH;AAFA,KAAX;;AAOA,QAAIH,QAAQ,IAAII,QAAQ,EAAxB,EAA4B;AAC1BF,MAAAA,IAAI,CAACC,OAAL,CAAa,gBAAb,IAAiCE,QAAQ,EAAzC;AACD;;AACD,QAAIJ,IAAJ,EAAU;AACRC,MAAAA,IAAI,CAACD,IAAL,GAAYK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAZ;AACD;;AACD,WAAOC,IAAP;AACD,GAfD;;AAiBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,SADH,CADF;AAKD;;AAED,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {<CryptoTable />}\n    </div>\n  );\n}\n\nfunction CryptoTable() {\n\n  const URL = \"http://localhost:8080/ExcerciseThursday/api/crypto\";\n\n  const fetchData = () => {\n    const options = makeOptions(\"GET\", true); //True add's the token\n    return fetch(URL, options).then(handleHttpErrors);\n  }\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        'Accept': 'application/json',\n      }\n    }\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n    return opts;\n  }\n\n  return (\n    <div>\n      {fetchData}\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}